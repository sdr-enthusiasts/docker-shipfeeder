#!/usr/bin/with-contenv bash
#shellcheck shell=bash
#shellcheck disable=SC2016,SC2068,SC2076,SC2086,SC2015

#---------------------------------------------------------------------------------------------
# Copyright (C) 2022-2023, Ramon F. Kolb (kx1t)
#
# This program is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the
# Free Software Foundation, either version 3 of the License, or (at your option)
# any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
# or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with this program.
# If not, see <https://www.gnu.org/licenses/>.
#---------------------------------------------------------------------------------------------


# check if logging is verbose:
if [[ -n "$VERBOSE_LOGGING" ]]
then
    [[ $VERBOSE_LOGGING =~ ^[0-5]{1}$ ]] && SHOWLOGS="-o $VERBOSE_LOGGING" || SHOWLOGS=""
else
    SHOWLOGS="-q -v 60"
fi

# Interpret additional feed targets, if defined
FEEDSTRING=()
if [[ -n "$UDP_FEEDS" ]]
then
    readarray -d "," -t feedsarray <<< "$UDP_FEEDS"
    for feeds in "${feedsarray[@]}"
    do
        [[ -n "$feeds" ]] && FEEDSTRING+=("-u ${feeds/:/ }")
    done
fi

# get gain
VALID_GAINS=(0.0 0.9 1.4 2.7 3.7 7.7 8.7 12.5 14.4 15.7 16.6 19.7 20.7 22.9 25.4 28.0 29.7 32.8 33.8 36.4 37.2 38.6 40.2 42.1 43.4 43.9 44.5 48.0 49.6)
# if the gain isn't defined, default to 33.8 (middle of the scale)
[[ -x "$RTLSDR_DEVICE_GAIN" ]] && RTLSDR_DEVICE_GAIN="33.8"
# if the gain isn't a number and it isn't "auto", then default to 33.8 (middle of the scale)
if [[ "$RTLSDR_DEVICE_GAIN" != "auto" ]] && [[ ! $RTLSDR_DEVICE_GAIN =~ ^[+-]?[0-9.]+$ ]]
then
    RTLSDR_DEVICE_GAIN="33.8"
fi
# Now make sure that the gain is in the valid gains range, and if it isn't, pick the nearest higher one
if [[ ! " ${VALID_GAINS[*]} " =~ " ${RTLSDR_DEVICE_GAIN} " ]] && [[ "${RTLSDR_DEVICE_GAIN,,}" != "auto" ]]
then
    for GAIN in "${VALID_GAINS[@]}"
    do
        if [[ "$(awk "BEGIN {print int($GAIN * 10);}")" -ge "$(awk "BEGIN {print int($RTLSDR_DEVICE_GAIN * 10);}")" ]]
        then
            RTLSDR_DEVICE_GAIN="$GAIN"
            echo "[aiscatcher][$(date +"%Y/%m/%d %H:%M:%S")] Gain rounded to ${RTLSDR_DEVICE_GAIN}"
            break
        fi
    done
fi
# If the number is still larger than the largest allowed number, then default to that one
[[ "$(awk "BEGIN {print int($RTLSDR_DEVICE_GAIN * 10);}")" -gt "$(awk "BEGIN {print int(${VALID_GAINS[-1]} * 10);}")" ]] && RTLSDR_DEVICE_GAIN="${VALID_GAINS[-1]}"

# check if STATION_NAME and STATION_LINK is defined. If it is not, add the ShipXplorer URL
[[ -z "$STATION_NAME" ]] && STATION_NAME="${SERIAL_NUMBER}" || true
[[ -z "$STATION_LINK" ]] && STATION_LINK="https://www.shipxplorer.com/stations/${SERIAL_NUMBER}" || true

aiscatcher_command=()
aiscatcher_command+=("/usr/local/bin/AIS-catcher")
aiscatcher_command+=("-N 80 REUSE_PORT on FILE /data/aiscatcher.bin")
[[ -n "${PLUGINS_FILE}" ]] && aiscatcher_command+=("PLUGIN /data/${PLUGINS_FILE}") || true
[[ -n "${STYLES_FILE}" ]] && aiscatcher_command+=("STYLE /data/${STYLES_FILE}") || true
[[ -n "${BACKUP_INTERVAL}" ]] && aiscatcher_command+=("BACKUP ${BACKUP_INTERVAL}") || true
[[ -n "${STATION_HISTORY}" ]] && aiscatcher_command+=("HISTORY ${STATION_HISTORY}") || true
aiscatcher_command+=("STATION $STATION_NAME") || true
aiscatcher_command+=("STATION_LINK $STATION_LINK") || true
if [[ -n "$SXFEEDER_LAT" ]] && [[ -n "$SXFEEDER_LON" ]]
then
    aiscatcher_command+=("LAT $SXFEEDER_LAT LON $SXFEEDER_LON")
fi
aiscatcher_command+=("-u 127.0.0.1 34994")
aiscatcher_command+=("-u 127.0.0.1 34995")
aiscatcher_command+=("${FEEDSTRING[*]}")
aiscatcher_command+=("$SHOWLOGS")
aiscatcher_command+=("-d ${RTLSDR_DEVICE_SERIAL}")
aiscatcher_command+=("-gr tuner ${RTLSDR_DEVICE_GAIN} rtlagc ON")
aiscatcher_command+=("$AISCATCHER_EXTRA_OPTIONS")

aiscommand="$(echo ${aiscatcher_command[@]} | xargs)"

echo "[aiscatcher][$(date +"%Y/%m/%d %H:%M:%S")] Starting: ${aiscommand}"

# Test AIS-catcher can run natively (without qemu)
if /usr/local/bin/AIS-catcher -h > /dev/null 2>&1
then
    # can be run natively
    # shellcheck disable=SC2048
    ${aiscommand} 2>&1 | \
        stdbuf -oL awk '{print "[aiscatcher][" strftime("%Y/%m/%d %H:%M:%S", systime()) "] " $0}'
else
    # needs qemu
    # shellcheck disable=SC2048
    qemu-arm-static ${aiscommand} 2>&1 | \
        stdbuf -oL awk '{print "[aiscatcher][" strftime("%Y/%m/%d %H:%M:%S", systime()) "] " $0}'
fi
